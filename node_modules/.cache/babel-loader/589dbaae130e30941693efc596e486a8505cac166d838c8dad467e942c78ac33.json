{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\PORTAFOLIOS\\\\CV REACT\\\\front\\\\src\\\\componentes\\\\AnimacionSeccionConBordes.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Acordeon from './Acordeon';\nimport TarjetaPortafolio from './TarjetasPortafolios';\nimport TarjetasTitulos from './TarjetasTitulos';\nimport TarjetasReferencias from './TarjetasReferencias'; // Importar el nuevo componente\nimport '../App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AnimacionSeccionConBordes = ({\n  title,\n  data,\n  isDirectContent,\n  isPortfolio = false,\n  isTarjetasTitulos = false,\n  isTarjetasReferencias = false\n}) => {\n  _s();\n  // Agregar isTarjetasReferencias\n  const [isOpen, setIsOpen] = useState(false);\n  const toggleSection = () => {\n    setIsOpen(!isOpen);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `seccionConBordes ${isOpen ? 'open' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      onClick: toggleSection,\n      children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n        className: `fa-solid fa-chevron-down ${isOpen ? 'rotate' : ''}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), isOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: isDirectContent ? data.map((item, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n        children: item\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 51\n      }, this)) : isPortfolio ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contTarjetas\",\n        children: data.map((proyecto, index) => /*#__PURE__*/_jsxDEV(TarjetaPortafolio, {\n          titulo: proyecto.titulo,\n          descripcion: proyecto.descripcion,\n          enlace: proyecto.enlace,\n          referencia: proyecto.referencia,\n          imagen: proyecto.imagen,\n          id: proyecto.id\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this) : isTarjetasTitulos ?\n      /*#__PURE__*/\n      // Verificamos si isTarjetasTitulos es true\n      _jsxDEV(TarjetasTitulos, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this) // Renderizamos TarjetasTitulos con los datos recibidos\n      : isTarjetasReferencias ?\n      /*#__PURE__*/\n      // Verificamos si isTarjetasReferencias es true\n      _jsxDEV(TarjetasReferencias, {\n        data: data\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }, this) // Renderizamos TarjetasReferencias con los datos recibidos\n      : /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"acordeones\",\n        children: data.map((item, index) => /*#__PURE__*/_jsxDEV(Acordeon, {\n          lugar: item.lugar,\n          descripcion: item.descripcion\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this);\n};\n_s(AnimacionSeccionConBordes, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n_c = AnimacionSeccionConBordes;\nexport default AnimacionSeccionConBordes;\nvar _c;\n$RefreshReg$(_c, \"AnimacionSeccionConBordes\");","map":{"version":3,"names":["React","useState","Acordeon","TarjetaPortafolio","TarjetasTitulos","TarjetasReferencias","jsxDEV","_jsxDEV","AnimacionSeccionConBordes","title","data","isDirectContent","isPortfolio","isTarjetasTitulos","isTarjetasReferencias","_s","isOpen","setIsOpen","toggleSection","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","map","item","index","proyecto","titulo","descripcion","enlace","referencia","imagen","id","lugar","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/PORTAFOLIOS/CV REACT/front/src/componentes/AnimacionSeccionConBordes.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Acordeon from './Acordeon';\r\nimport TarjetaPortafolio from './TarjetasPortafolios';\r\nimport TarjetasTitulos from './TarjetasTitulos';\r\nimport TarjetasReferencias from './TarjetasReferencias'; // Importar el nuevo componente\r\nimport '../App.css';\r\n\r\nconst AnimacionSeccionConBordes = ({ title, data, isDirectContent, isPortfolio = false, isTarjetasTitulos = false, isTarjetasReferencias = false }) => { // Agregar isTarjetasReferencias\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    const toggleSection = () => {\r\n        setIsOpen(!isOpen);\r\n    };\r\n\r\n    return (\r\n        <div className={`seccionConBordes ${isOpen ? 'open' : ''}`}>\r\n            <div className=\"header\" onClick={toggleSection}>\r\n                <h4>{title}</h4>\r\n                <i className={`fa-solid fa-chevron-down ${isOpen ? 'rotate' : ''}`}></i>\r\n            </div>\r\n            {isOpen && (\r\n                <div className=\"content\">\r\n                    {isDirectContent ? (\r\n                        data.map((item, index) => <p key={index}>{item}</p>)\r\n                    ) : isPortfolio ? (\r\n                        <div className=\"contTarjetas\">\r\n                            {data.map((proyecto, index) => (\r\n                                <TarjetaPortafolio\r\n                                    key={index}\r\n                                    titulo={proyecto.titulo}\r\n                                    descripcion={proyecto.descripcion}\r\n                                    enlace={proyecto.enlace}\r\n                                    referencia={proyecto.referencia}\r\n                                    imagen={proyecto.imagen}\r\n                                    id={proyecto.id}\r\n                                />\r\n                            ))}\r\n                        </div>\r\n                    ) : isTarjetasTitulos ? ( // Verificamos si isTarjetasTitulos es true\r\n                        <TarjetasTitulos data={data} /> // Renderizamos TarjetasTitulos con los datos recibidos\r\n                    ) : isTarjetasReferencias ? ( // Verificamos si isTarjetasReferencias es true\r\n                        <TarjetasReferencias data={data} /> // Renderizamos TarjetasReferencias con los datos recibidos\r\n                    ) : (\r\n                        <ul className=\"acordeones\">\r\n                            {data.map((item, index) => (\r\n                                <Acordeon key={index} lugar={item.lugar} descripcion={item.descripcion} />\r\n                            ))}\r\n                        </ul>\r\n                    )}\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AnimacionSeccionConBordes;\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}